(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{567:function(t,a,s){"use strict";s.r(a);var e=s(25),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"modifiers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modifiers"}},[t._v("#")]),t._v(" Modifiers")]),t._v(" "),s("p",[t._v("Modifiers are special flags that can change the value of dice rolls, their appearance, order, and more.")]),t._v(" "),s("p",[t._v("You can generally combine multiple modifiers of different types, and they'll work together.")]),t._v(" "),s("p",[t._v("For example, This will both "),s("a",{attrs:{href:"#exploding-cp"}},[t._v("Explode")]),t._v(" any maximum rolls, and "),s("a",{attrs:{href:"#keep-kn-khn-kln"}},[t._v("Keep")]),t._v(" only the highest 2 rolls:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("k2\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Missing a modifier?")]),t._v(" "),s("p",[t._v("We have tried to cover all the commonly used modifiers. "),s("a",{attrs:{href:"https://github.com/GreenImp/rpg-dice-roller/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("Let us know"),s("OutboundLink")],1),t._v(" if we've missed one that you use!")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Modifier order")]),t._v(" "),s("p",[t._v("Modifiers always run in a specific order, regardless of the order you specify them in.\nThis is determined by the modifier's "),s("code",[t._v("order")]),t._v(" property, and works in ascending order.")]),t._v(" "),s("p",[t._v("These two are equivalent, and the "),s("a",{attrs:{href:"#exploding-cp"}},[t._v("explode modifier")]),t._v(" will always run before the "),s("a",{attrs:{href:"#drop-dn-dhn-dln"}},[t._v("drop modifier")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("d1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6d1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"min-min-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#min-min-n"}},[t._v("#")]),t._v(" Min ("),s("code",[t._v("min{n}")]),t._v(") "),s("Badge",{attrs:{text:"New",vertical:"middle"}})],1),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 1")]),t._v(" "),s("p",[t._v("The min modifier causes any dice rolls below the minimum value to be treated as the minimum value. It's the opposite of the "),s("a",{attrs:{href:"#max-min-n"}},[t._v("Max modifier")])]),t._v(" "),s("p",[t._v("To specify a minimum value, use the word "),s("code",[t._v("min")]),t._v(" followed by the minimum value: "),s("code",[t._v("4d6min3")])]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a normal roll")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the same roll but values less than 3 are treated as 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6min3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d6min3"}}),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Statistic probability")]),t._v(" "),s("p",[t._v("It's worth noting that it is statistically more likely to roll the minimum value than any others.")]),t._v(" "),s("p",[t._v("e.g. "),s("code",[t._v("d6min3")]),t._v(" 4, 5, and 6 only have a  "),s("em",[t._v("1 in 6 (16.66%)")]),t._v(" chance of being rolled, but 3 has a "),s("em",[t._v("3 in 6 (50%)")]),t._v(" chance.")])]),t._v(" "),s("h2",{attrs:{id:"max-max-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max-max-n"}},[t._v("#")]),t._v(" Max ("),s("code",[t._v("max{n}")]),t._v(") "),s("Badge",{attrs:{text:"New",vertical:"middle"}})],1),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 2")]),t._v(" "),s("p",[t._v("The max modifier causes any dice rolls above the maximum value to be treated as the maximum value. It's the opposite of the "),s("a",{attrs:{href:"#min-max-n"}},[t._v("Min modifier")])]),t._v(" "),s("p",[t._v("To specify a maximum value, use the word "),s("code",[t._v("max")]),t._v(" followed by the maximum value: "),s("code",[t._v("4d6max3")])]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a normal roll")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the same roll but values greater than 3 are treated as 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6max3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d6max3"}}),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Statistic probability")]),t._v(" "),s("p",[t._v("It's worth noting that it is statistically more likely to roll the maximum value than any others.")]),t._v(" "),s("p",[t._v("e.g. "),s("code",[t._v("d6max3")]),t._v(" 1 and 2 only have a  "),s("em",[t._v("1 in 6 (16.66%)")]),t._v(" chance of being rolled, but 3 has a "),s("em",[t._v("4 in 6 (66.66%)")]),t._v(" chance.")])]),t._v(" "),s("h2",{attrs:{id:"exploding-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exploding-cp"}},[t._v("#")]),t._v(" Exploding ("),s("code",[t._v("!")]),t._v(" / "),s("code",[t._v("!{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 3")]),t._v(" "),s("p",[t._v("The exploding dice mechanic allows one or more dice to be re-rolled (Usually when it rolls the highest possible number on the die), with each successive roll being added to the total.")]),t._v(" "),s("p",[t._v("To explode a die, add an exclamation mark after the die notation: "),s("code",[t._v("4d10!")])]),t._v(" "),s("p",[t._v("Each exploded die shows as a separate roll in the list, like so:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n")])])]),s("p",[t._v("The second die rolled the highest value, and so it exploded - we roll again. The re-rolled die also exploded, so we roll a fourth time. The fourth roll, however, did not explode, so we stop rolling.")]),t._v(" "),s("p",[t._v("If you want to change the number that a die will explode on, you can use a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on any rolls equal to 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on any rolls greater than 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on any roll less than or equal to 3")]),t._v("\n")])])]),s("p",[t._v("Read more about "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points below")]),t._v(".")]),t._v(" "),s("DiceRoller",{attrs:{notation:"4d10!<=3"}}),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("`!=` compare point with exploding dice")]),t._v(" "),s("p",[t._v("You can't have a die that only explodes if you "),s("em",[t._v("don't")]),t._v(" roll a specific number:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("p",[t._v("This notation will instead create a "),s("a",{attrs:{href:"#compounding-cp"}},[t._v("compound roll")]),t._v(" if you roll a 4.")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Iteration limit")]),t._v(" "),s("p",[t._v("To stop infinite loops, when running something like "),s("code",[t._v("d10!>0")]),t._v(", modifiers are limited to 1000 iterations per dice roll:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1d10!>0")]),t._v(" would return 1001 rolls; the initial roll, and 1000 exploded rolls.")]),t._v(" "),s("li",[s("code",[t._v("2d10!>0")]),t._v(" would return 2002 rolls; the initial 2 rolls, and 100 exploded rolls per initial roll.")])]),t._v(" "),s("p",[t._v("This also applies to "),s("a",{attrs:{href:"#compounding-cp"}},[t._v("Compounding")]),t._v(", "),s("a",{attrs:{href:"#penetrating-p-p-p-cp-p-cp"}},[t._v("Penetrating")]),t._v(", and "),s("a",{attrs:{href:"#re-roll-r-ro-r-cp-ro-cp"}},[t._v("Re-roll")]),t._v(" modifiers.")])]),t._v(" "),s("h3",{attrs:{id:"compounding-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compounding-cp"}},[t._v("#")]),t._v(" Compounding ("),s("code",[t._v("!!")]),t._v(" / "),s("code",[t._v("!!{cp}")]),t._v(")")]),t._v(" "),s("p",[t._v("Sometimes, you may want the exploded dice rolls to be combined together into a single roll. In this situation, you can compound the dice by using two exclamation marks: "),s("code",[t._v("4d10!!")])]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// exploding re-rolls the dice")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compounding combines the re-rolled dice")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n")])])]),s("p",[t._v("You can also use "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points")]),t._v(" to change when a die will compound:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compound on any rolls equal to 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compound on any rolls greater than 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compound on any roll less than or equal to 3")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d10!!<=3"}}),s("h3",{attrs:{id:"penetrating-p-p-p-cp-p-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#penetrating-p-p-p-cp-p-cp"}},[t._v("#")]),t._v(" Penetrating ("),s("code",[t._v("!p")]),t._v(" / "),s("code",[t._v("!!p")]),t._v(" / "),s("code",[t._v("!p{cp}")]),t._v(" / "),s("code",[t._v("!!p{cp}")]),t._v(")")]),t._v(" "),s("p",[t._v("Some exploding dice system use a penetrating rule.")]),t._v(" "),s("p",[t._v("Taken from the Hackmaster Basic rules:")]),t._v(" "),s("blockquote",[s("p",[t._v("Should you roll the maximum value\non this particular die, you may re-roll and add the result of\nthe extra die, less one point, to the total (penetration can\nactually result in simply the maximum die value if a 1 is subsequently\nrolled, since any fool knows that 1-1=0). This\nprocess continues indefinitely as long as the die in question\ncontinues to come up maximum (but there’s always only a\n–1 subtracted from the extra die, even if it’s, say, the third\ndie of penetration)")])]),t._v(" "),s("p",[t._v("So, if I rolled "),s("code",[t._v("1d6")]),t._v(" (penetrating), and got a 6, I would roll another "),s("code",[t._v("d6")]),t._v(", subtracting 1 from the result. If that die rolled a 6 (before the -1) it would also penetrate, and so on.")]),t._v(" "),s("p",[t._v("The syntax for penetrating is very similar to exploding, but with a lowercase 'p' appended: "),s("code",[t._v("2d6!p")]),t._v(".")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Actual rolls are [6, 6, 6, 4, 1]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),s("p",[t._v("The first roll exploded (Rolled the highest number on the die), so we rolled again and subtracted 1 from the re-roll. The second and third rolls also exploded and were re-rolled, so we subtract 1 from each.")]),t._v(" "),s("p",[t._v("Remember that we subtract 1 from penetrated rolls, which is why we see "),s("code",[t._v("5")]),t._v(", "),s("code",[t._v("5")]),t._v(", "),s("code",[t._v("3")]),t._v(" instead of "),s("code",[t._v("6")]),t._v(", "),s("code",[t._v("6")]),t._v(", "),s("code",[t._v("4")]),t._v(".")]),t._v(" "),s("p",[t._v("You can also compound penetrating dice, like so: "),s("code",[t._v("2d6!!p")])]),t._v(" "),s("p",[t._v("You can also use "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points")]),t._v(" to change when a dice will penetrate:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// penetrate on any rolls equal to 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// penetrate and compound on any rolls greater than 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// penetrate on any roll less than or equal to 3")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d10!p<=3"}}),s("h2",{attrs:{id:"re-roll-r-ro-r-cp-ro-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#re-roll-r-ro-r-cp-ro-cp"}},[t._v("#")]),t._v(" Re-roll ("),s("code",[t._v("r")]),t._v(" / "),s("code",[t._v("ro")]),t._v(" / "),s("code",[t._v("r{cp}")]),t._v(" / "),s("code",[t._v("ro{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 4")]),t._v(" "),s("p",[t._v("This will re-roll a die that rolls the lowest possible number on a die (Usually a 1). It will keep re-rolling until a number greater than the minimum is rolled, disregarding any of the previous rolls.")]),t._v(" "),s("p",[t._v("This is similar to "),s("a",{attrs:{href:"#exploding-cp"}},[t._v("Exploding")]),t._v(", but explode will keep the previous rolls and add them together.")]),t._v(" "),s("p",[t._v("To re-roll, add an "),s("code",[t._v("r")]),t._v(" after the dice notation:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll 1 d6 and re-roll if the result is 1 (and again each time a 1 is rolled)")]),t._v("\nd6r\n")])])]),s("p",[t._v("If you only want to re-roll once, even if the second roll also rolls the minimum value, you can use the "),s("code",[t._v("ro")]),t._v(" notation:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll 1 d6 and re-roll if the result is 1. Don't re-roll again, even if the second roll is also a 1")]),t._v("\nd6ro\n")])])]),s("p",[t._v("If you want to change the number that a dice will re-roll on, you can use a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// re-roll on any rolls equal to 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6ro"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// re-roll once on any roll greater than 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// re-roll on any roll less than or equal to 3")]),t._v("\n")])])]),s("p",[t._v("Read more about "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points below")]),t._v(".")]),t._v(" "),s("DiceRoller",{attrs:{notation:"4d10r<=3"}}),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Iteration limit")]),t._v(" "),s("p",[t._v("To stop infinite loops, when running something like "),s("code",[t._v("d10r>0")]),t._v(", modifiers are limited to 1000 iterations per dice roll:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1d10r>0")]),t._v("would only re-roll 1000 times.")]),t._v(" "),s("li",[s("code",[t._v("2d10r>0")]),t._v(" would re-roll 2000; once for each initial roll.")])]),t._v(" "),s("p",[t._v("This also applies to "),s("a",{attrs:{href:"#exploding-cp"}},[t._v("Exploding")]),t._v(", "),s("a",{attrs:{href:"#compounding-cp"}},[t._v("Compounding")]),t._v(", and "),s("a",{attrs:{href:"#penetrating-p-p-p-cp-p-cp"}},[t._v("Penetrating")]),t._v(" modifiers.")])]),t._v(" "),s("h2",{attrs:{id:"keep-k-n-kh-n-kl-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-k-n-kh-n-kl-n"}},[t._v("#")]),t._v(" Keep ("),s("code",[t._v("k{n}")]),t._v(" / "),s("code",[t._v("kh{n}")]),t._v(" / "),s("code",[t._v("kl{n}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 5")]),t._v(" "),s("p",[t._v("The keep modifier allows you to roll a collection of dice but to disregard all except for the highest or lowest result(s).\nIt is the opposite of the "),s("a",{attrs:{href:"#drop-dn-dhn-dln"}},[t._v("Drop modifier")]),t._v(".")]),t._v(" "),s("p",[t._v("The notation of the keep modifier is a lowercase "),s("code",[t._v("k")]),t._v(', followed by the end that should be dropped ("h" = "highest", "l" = "lowest"), and the number of dice to drop.')]),t._v(" "),s("p",[t._v('The "end" is optional and, if omitted, will default to '),s("em",[t._v("highest")]),t._v(".")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10kh2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times and keep the highest 2 rolls")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10k2  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equivalent to the above")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10kl1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times and keep the lowest roll")]),t._v("\n")])])]),s("p",[t._v('When outputting the roll, the kept rolls aren\'t modified, but the dropped rolls are given the "d" flag:')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("d8k3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"6d8k3"}}),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Using Drop and Keep modifiers together")]),t._v(" "),s("p",[t._v("The keep and "),s("a",{attrs:{href:"#drop-dn-dhn-dln"}},[t._v("drop")]),t._v(" modifiers work really well together, but there are some caveats.\nThey both look at the entire dice pool. So if a roll has been dropped, it will be still be included in the list of possible rolls to drop.")]),t._v(" "),s("p",[t._v("This means that using keep and drop modifiers together can override each other.")]),t._v(" "),s("p",[t._v("For example, the following will drop all the rolls:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("d10k1dh1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("The is because the "),s("code",[t._v("k1")]),t._v(" will drop the "),s("code",[t._v("1")]),t._v(" and "),s("code",[t._v("2")]),t._v(", and the "),s("code",[t._v("dh1")]),t._v(" will drop the "),s("code",[t._v("7")]),t._v(".")]),t._v(" "),s("p",[t._v("This (perhaps more expectedly) will only keep the highest dice:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("d10k1d1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("k1")]),t._v(" will drop the "),s("code",[t._v("6")]),t._v(" and "),s("code",[t._v("1")]),t._v(", and the "),s("code",[t._v("d1")]),t._v(" will also drop the "),s("code",[t._v("6")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"drop-d-n-dh-n-dl-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drop-d-n-dh-n-dl-n"}},[t._v("#")]),t._v(" Drop ("),s("code",[t._v("d{n}")]),t._v(" / "),s("code",[t._v("dh{n}")]),t._v(" / "),s("code",[t._v("dl{n}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 6")]),t._v(" "),s("p",[t._v('Sometimes you may want to roll a certain number of dice, but "drop" or remove high or low rolls from the results.\nIt is the opposite of the '),s("a",{attrs:{href:"#keep-kn-khn-kln"}},[t._v("Keep modifier")]),t._v(".")]),t._v(" "),s("p",[t._v("The notation of the drop modifier is a lowercase "),s("code",[t._v("d")]),t._v(', followed by the end that should be dropped ("h" = "highest", "l" = "lowest"), and the number of dice to drop.')]),t._v(" "),s("p",[t._v('The "end" is optional and, if omitted, will default to '),s("em",[t._v("lowest")]),t._v(".")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10dl2    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times and drop the lowest 2 rolls")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10d2     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equivalent to the above")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10dh1    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times and drop the highest roll")]),t._v("\n")])])]),s("p",[t._v('When outputting the roll, the dropped rolls are given the "d" flag:')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("d8dh3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),s("p",[t._v('You can also use "drop lowest" and "drop highest" modifiers together:')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times and drop the highest and lowest rolls")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10dh1dl2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d10dh1dl2"}}),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Using Drop and Keep modifiers together")]),t._v(" "),s("p",[t._v("See the note in the "),s("a",{attrs:{href:"#keep-kn-khn-kln"}},[t._v("Keep modifier section")]),t._v(" regarding using the two together")])]),t._v(" "),s("h2",{attrs:{id:"target-success-dice-pool-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#target-success-dice-pool-cp"}},[t._v("#")]),t._v(" Target success / Dice pool ("),s("code",[t._v("{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 7")]),t._v(" "),s("p",[t._v("Some systems use dice pool, or success counts, whereby the total is equal to the quantity of dice rolled that meet a fixed condition, rather than the total value of the rolls.")]),t._v(" "),s("p",[t._v("This can be achieved by adding a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(" notation directly after the die notation.")]),t._v(" "),s("p",[t._v('For example, a "pool" of 10 sided dice where you count the number of dice that roll an 8 or higher as "successes":')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),s("p",[t._v("You can use any valid "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(" notation.")]),t._v(" "),s("p",[t._v("Examples:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// only a roll of 6 is a success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// greater than a 1 is a success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less than a 2 is a success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d8"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// greater than or equal to 5 is a success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("d10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less than or equal to 4 is a success")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Not equal to")]),t._v(" "),s("p",[t._v("You cannot count success for any number that is "),s("em",[t._v("not")]),t._v(" equal to a certain value, like:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("Because it will conflict with the "),s("a",{attrs:{href:"#exploding-cp"}},[t._v("Explode")]),t._v(" modifier, and it will instead explode on any roll of "),s("code",[t._v("3")])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Modifiers with compare points")]),t._v(" "),s("p",[t._v("Another caveat is that the target modifier cannot directly follow any modifier that uses "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points")]),t._v(",\notherwise the Target modifier will be instead be used as the "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Points")]),t._v(" for the modifier:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on any roll greater than 3")]),t._v("\n")])])]),s("p",[t._v("But you can work around this by specifying the Target compare point first:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on a roll of 6, greater than 3 is a success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explode on any roll greater than 4, greater than 3 is a success")]),t._v("\n")])])])]),t._v(" "),s("DiceRoller",{attrs:{notation:"6d10<=4"}}),s("h2",{attrs:{id:"target-failures-dice-pool-f-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#target-failures-dice-pool-f-cp"}},[t._v("#")]),t._v(" Target Failures / Dice Pool ("),s("code",[t._v("f{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 7")]),t._v(" "),s("p",[t._v("Sometimes, when counting success, you also need to consider failures.")]),t._v(" "),s("p",[t._v("A failure modifier "),s("em",[t._v("must")]),t._v(" directly follow a Success modifier, and works in much the same way.")]),t._v(" "),s("p",[t._v("For each failure counted, it will "),s("em",[t._v("subtract 1")]),t._v(" from the total number of successes counted.")]),t._v(" "),s("p",[t._v("The Failure modifier is a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(', preceded with the lowercase letter "f":')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// greater than 4 is success, less than 3 is failure")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d6>4f<3"}}),s("h2",{attrs:{id:"critical-success-cs-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#critical-success-cs-cp"}},[t._v("#")]),t._v(" Critical Success ("),s("code",[t._v("cs{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 8")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("This is purely aesthetic and makes no functional difference to the rolls or their values.")])]),t._v(" "),s("p",[t._v("When a die rolls the highest possible value, such as rolling a 20 on a d20, this is called a critical success.")]),t._v(" "),s("p",[t._v("However, sometimes you want a critical success to be on a different value, or a range, such as 18-20 on a d20.")]),t._v(" "),s("p",[t._v("To specify what is considered as a critical success, add "),s("code",[t._v("cs")]),t._v(" and a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(", after the die notation:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times, anything greater than 7 is a critical success")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10cs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),s("p",[t._v("The roll result output will look something like this:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the rolls of 20 and 18 are critical successes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d20cs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"5d20cs>=16"}}),s("h2",{attrs:{id:"critical-failure-cf-cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#critical-failure-cf-cp"}},[t._v("#")]),t._v(" Critical Failure ("),s("code",[t._v("cf{cp}")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 9")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("This is purely aesthetic and makes no functional difference to the rolls or their values.")])]),t._v(" "),s("p",[t._v("When a die rolls the lowest possible value, such as rolling a 1 on a d20, this is called a critical failure.")]),t._v(" "),s("p",[t._v("However, sometimes you want a critical failure to be on a different value, or a range, such as 1-3 on a d20.")]),t._v(" "),s("p",[t._v("To specify what is considered as a critical failure, add "),s("code",[t._v("cf")]),t._v(" and a "),s("a",{attrs:{href:"#compare-point"}},[t._v("Compare Point")]),t._v(", after the die notation:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 4 times, anything less than 3 is a critical failure")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d10cf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("The roll result output will look something like this:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the rolls of 3 and 6 are critical failures")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("d20cf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"5d20cf<=6"}}),s("h2",{attrs:{id:"sorting-s-sa-sd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sorting-s-sa-sd"}},[t._v("#")]),t._v(" Sorting ("),s("code",[t._v("s")]),t._v(" / "),s("code",[t._v("sa")]),t._v(" / "),s("code",[t._v("sd")]),t._v(")")]),t._v(" "),s("p",[s("strong",[t._v("Order:")]),t._v(" 10")]),t._v(" "),s("p",[t._v("You can sort the dice rolls, so that they are displayed in numerical order by appending the "),s("code",[t._v("s")]),t._v(" flag after the dice notation.")]),t._v(" "),s("p",[t._v("The default order is ascending, but you can specify the sort order using "),s("code",[t._v("sa")]),t._v(" and "),s("code",[t._v("sd")]),t._v(" for ascending and descending respectively:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no sorting")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default sort the results ascending")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6sa"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sort the results ascending")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("d6sd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sort the results descending")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"4d6sd"}}),s("h2",{attrs:{id:"compare-point"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compare-point"}},[t._v("#")]),t._v(" Compare point")]),t._v(" "),s("p",[t._v("Many modifiers perform an action when the die rolls either the highest or lowest possible number. Sometimes you may want the modifier to execute on different values, and this is what Compare Points are for.")]),t._v(" "),s("p",[t._v("A compare point is a comparative operator, followed by the number to match against (e.g. "),s("code",[t._v("=8")]),t._v(")")]),t._v(" "),s("p",[t._v("The following are valid comparative operators:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equal to")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// not equal to")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less than")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// greater than")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less than or equal to")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// greater than or equal to")]),t._v("\n")])])]),s("p",[t._v("Wherever you can use compare points, the notation is the same. So if you wanted to check if a number is "),s("em",[t._v('"greater than or equal to 5"')]),t._v(", the notation would look like:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),s("p",[t._v("Here are some examples with full notation strings:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("d6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d6 and explode any roll equal to 3")]),t._v("\nd10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d10 and explode on any roll greater than or equal to 5")]),t._v("\nd6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d6 and compound only on rolls greater than 4")]),t._v("\nd4r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// roll a d4 and re-roll anything less than 3")]),t._v("\n")])])]),s("DiceRoller",{attrs:{notation:"d4r<3"}})],1)}),[],!1,null,null,null);a.default=r.exports}}]);