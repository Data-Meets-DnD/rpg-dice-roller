(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{530:function(t,s,r){"use strict";r.r(s);var a=r(25),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"rollgroup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup"}},[t._v("#")]),t._v(" RollGroup")]),t._v(" "),r("p",[r("a",{attrs:{name:"RollGroup"}})]),t._v(" "),r("h2",{attrs:{id:"rollgroup-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-2"}},[t._v("#")]),t._v(" RollGroup")]),t._v(" "),r("p",[t._v("A "),r("code",[t._v("RollGroup")]),t._v(' is a group of one or more "sub-rolls".')]),t._v(" "),r("p",[t._v("A sub-roll is just simple roll notation (e.g. "),r("code",[t._v("4d6")]),t._v(", "),r("code",[t._v("2d10*3")]),t._v(", "),r("code",[t._v("5/10d20")]),t._v(")")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": global class"),r("br"),t._v(" "),r("strong",[t._v("Since")]),t._v(": 4.5.0")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#RollGroup"}},[t._v("RollGroup")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#new_RollGroup_new"}},[t._v("new RollGroup([expressions], [modifiers])")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+expressions"}},[t._v(".expressions")]),t._v(" ⇒ "),r("code",[t._v("Array.<Array.<(StandardDice|string|number)>>")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+expressions"}},[t._v(".expressions")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+modifiers"}},[t._v(".modifiers")]),t._v(" ⇒ "),r("code",[t._v("Map.<string, Modifier>")]),t._v(" | "),r("code",[t._v("null")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+modifiers"}},[t._v(".modifiers")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+notation"}},[t._v(".notation")]),t._v(" ⇒ "),r("code",[t._v("string")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+roll"}},[t._v(".roll()")]),t._v(" ⇒ "),r("code",[t._v("ResultGroup")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+toJSON"}},[t._v(".toJSON()")]),t._v(" ⇒ "),r("code",[t._v("Object")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#RollGroup+toString"}},[t._v(".toString()")]),t._v(" ⇒ "),r("code",[t._v("string")])])])])]),t._v(" "),r("p",[r("a",{attrs:{name:"new_RollGroup_new"}})]),t._v(" "),r("h3",{attrs:{id:"new-rollgroup-expressions-modifiers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-rollgroup-expressions-modifiers"}},[t._v("#")]),t._v(" new RollGroup([expressions], [modifiers])")]),t._v(" "),r("p",[t._v("Create a "),r("code",[t._v("RollGroup")]),t._v(" instance.")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Param")]),t._v(" "),r("th",[t._v("Type")]),t._v(" "),r("th",[t._v("Default")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("[expressions]")]),t._v(" "),r("td",[r("code",[t._v("Array.<Array.<(StandardDice|string|number)>>")])]),t._v(" "),r("td",[r("code",[t._v("[]")])]),t._v(" "),r("td",[t._v("List of sub-rolls")])]),t._v(" "),r("tr",[r("td",[t._v("[modifiers]")]),t._v(" "),r("td",[r("code",[t._v("Map.<string, Modifier>")]),t._v(" | "),r("code",[t._v("Array.<Modifier>")]),t._v(" | "),r("code",[t._v("Object")]),t._v(" | "),r("code",[t._v("null")])]),t._v(" "),r("td",[r("code",[t._v("[]")])]),t._v(" "),r("td",[t._v("The modifiers that affect the group")])])])]),t._v(" "),r("p",[r("strong",[t._v("Example")]),t._v(" "),r("em",[t._v("(`{4d6+4, 2d%/5}k1`)")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" expressions "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardDice")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PercentileDice")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" modifiers "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeepModifier")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" group "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RollGroup")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expressions"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" modifiers"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[r("a",{attrs:{name:"RollGroup+expressions"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-expressions-⇒-array-array-standarddice-string-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-expressions-⇒-array-array-standarddice-string-number"}},[t._v("#")]),t._v(" rollGroup.expressions ⇒ "),r("code",[t._v("Array.<Array.<(StandardDice|string|number)>>")])]),t._v(" "),r("p",[t._v("The sub-roll expressions in the group.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance property of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("a",{attrs:{name:"RollGroup+expressions"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-expressions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-expressions"}},[t._v("#")]),t._v(" rollGroup.expressions")]),t._v(" "),r("p",[t._v("Set the sub-roll expressions in the group.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance property of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("strong",[t._v("Throws")]),t._v(":")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("TypeError")]),t._v(" Expressions must be an array of arrays")]),t._v(" "),r("li",[r("code",[t._v("TypeError")]),t._v(" Sub expressions cannot be empty")]),t._v(" "),r("li",[r("code",[t._v("TypeError")]),t._v(" Sub expression items must be Dice, numbers, or strings")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Param")]),t._v(" "),r("th",[t._v("Type")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("expressions")]),t._v(" "),r("td",[r("code",[t._v("Array.<Array.<(StandardDice|string|number)>>")])])])])]),t._v(" "),r("p",[r("a",{attrs:{name:"RollGroup+modifiers"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-modifiers-⇒-map-string-modifier-null"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-modifiers-⇒-map-string-modifier-null"}},[t._v("#")]),t._v(" rollGroup.modifiers ⇒ "),r("code",[t._v("Map.<string, Modifier>")]),t._v(" | "),r("code",[t._v("null")])]),t._v(" "),r("p",[t._v("The modifiers that affect the object.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance property of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("a",{attrs:{name:"RollGroup+modifiers"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-modifiers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-modifiers"}},[t._v("#")]),t._v(" rollGroup.modifiers")]),t._v(" "),r("p",[t._v("Set the modifiers that affect this group.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance property of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("strong",[t._v("Throws")]),t._v(":")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("TypeError")]),t._v(" Modifiers should be a Map, array of Modifiers, or an Object")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Param")]),t._v(" "),r("th",[t._v("Type")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("value")]),t._v(" "),r("td",[r("code",[t._v("Map.<string, Modifier>")]),t._v(" | "),r("code",[t._v("Array.<Modifier>")]),t._v(" | "),r("code",[t._v("Object")]),t._v(" | "),r("code",[t._v("null")])])])])]),t._v(" "),r("p",[r("a",{attrs:{name:"RollGroup+notation"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-notation-⇒-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-notation-⇒-string"}},[t._v("#")]),t._v(" rollGroup.notation ⇒ "),r("code",[t._v("string")])]),t._v(" "),r("p",[t._v("The group notation. e.g. "),r("code",[t._v("{4d6, 2d10+3}k1")]),t._v(".")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance property of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("a",{attrs:{name:"RollGroup+roll"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-roll-⇒-resultgroup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-roll-⇒-resultgroup"}},[t._v("#")]),t._v(" rollGroup.roll() ⇒ "),r("code",[t._v("ResultGroup")])]),t._v(" "),r("p",[t._v("Run the sub-roll expressions for the group.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance method of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("strong",[t._v("Returns")]),t._v(": "),r("code",[t._v("ResultGroup")]),t._v(" - The results of the sub-rolls"),r("br"),t._v(" "),r("strong",[t._v("Example")]),t._v(" "),r("em",[t._v("(`{4d6+4/1d6, 2d10/3}k1`)")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("ResultGroup "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  results"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sub-roll 1 - 4d6+4/1d6")]),t._v("\n    ResultGroup "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      results"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        RollResults "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          rolls"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            RollResult "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            RollResult "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            RollResult "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            RollResult "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        RollResults "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          rolls"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            RollResult "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              value"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sub-roll 2 - 2d10/3")]),t._v("\n    ResultGroup "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      results"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        RollResults "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          rolls"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            RollResults "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            RollResults "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[r("a",{attrs:{name:"RollGroup+toJSON"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-tojson-⇒-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-tojson-⇒-object"}},[t._v("#")]),t._v(" rollGroup.toJSON() ⇒ "),r("code",[t._v("Object")])]),t._v(" "),r("p",[t._v("Return an object for JSON serialising.")]),t._v(" "),r("p",[t._v("This is called automatically when JSON encoding the object.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance method of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("a",{attrs:{name:"RollGroup+toString"}})]),t._v(" "),r("h3",{attrs:{id:"rollgroup-tostring-⇒-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rollgroup-tostring-⇒-string"}},[t._v("#")]),t._v(" rollGroup.toString() ⇒ "),r("code",[t._v("string")])]),t._v(" "),r("p",[t._v("Return the String representation of the object.")]),t._v(" "),r("p",[t._v("This is called automatically when casting the object to a string.")]),t._v(" "),r("p",[r("strong",[t._v("Kind")]),t._v(": instance method of "),r("a",{attrs:{href:"#RollGroup"}},[r("code",[t._v("RollGroup")])]),r("br"),t._v(" "),r("strong",[t._v("See")]),t._v(": "),r("a",{attrs:{href:"#RollGroup+notation"}},[t._v("notation")])])])}),[],!1,null,null,null);s.default=n.exports}}]);